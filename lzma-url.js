import * as base64 from "./base64.js";
const __4294967296=4294967296,N1_longLit=[4294967295,-__4294967296],MIN_VALUE=[0,-0x8000000000000000],P0_longLit=[0,0],P1_longLit=[1,0];function add(e,r){return create(e[0]+r[0],e[1]+r[1])}function initDim(e){var r=[];return r[e-1]=void 0,r}function and(e,r){return makeFromBits(~~Math.max(Math.min(e[1]/__4294967296,2147483647),-2147483648)&~~Math.max(Math.min(r[1]/__4294967296,2147483647),-2147483648),lowBits_0(e)&lowBits_0(r))}function compare(e,r){var t,o;return e[0]==r[0]&&e[1]==r[1]?0:(t=e[1]<0,o=r[1]<0,t&&!o?-1:!t&&o?1:sub(e,r)[1]<0?-1:1)}function create(e,r){var t,o;for(e%=0x10000000000000000,r=(r%=0x10000000000000000)-(t=r%__4294967296)+(o=Math.floor(e/__4294967296)*__4294967296),e=e-o+t;e<0;)e+=__4294967296,r-=__4294967296;for(;e>4294967295;)e-=__4294967296,r+=__4294967296;for(r%=0x10000000000000000;r>0x7fffffff00000000;)r-=0x10000000000000000;for(;r<-0x8000000000000000;)r+=0x10000000000000000;return[e,r]}function eq(e,r){return e[0]==r[0]&&e[1]==r[1]}function fromInt(e){return e>=0?[e,0]:[e+__4294967296,-__4294967296]}function lowBits_0(e){return e[0]>=2147483648?~~Math.max(Math.min(e[0]-__4294967296,2147483647),-2147483648):~~Math.max(Math.min(e[0],2147483647),-2147483648)}function makeFromBits(e,r){var t;return t=r,r<0&&(t+=__4294967296),[t,e*__4294967296]}function pwrAsDouble(e){return e<=30?1<<e:pwrAsDouble(30)*pwrAsDouble(e-30)}function shl(e,r){var t,o,i,n;if(r&=63,eq(e,MIN_VALUE))return r?P0_longLit:e;if(e[1]<0)throw new Error("Neg");return n=pwrAsDouble(r),o=e[1]*n%0x10000000000000000,(o+=t=(i=e[0]*n)-i%__4294967296)>=0x8000000000000000&&(o-=0x10000000000000000),[i-=t,o]}function shr(e,r){var t;return t=pwrAsDouble(r&=63),create(Math.floor(e[0]/t),e[1]/t)}function shru(e,r){var t;return t=shr(e,r&=63),e[1]<0&&(t=add(t,shl([2,0],63-r))),t}function sub(e,r){return create(e[0]-r[0],e[1]-r[1])}function $ByteArrayInputStream(e,r){return e.buf=r,e.pos=0,e.count=r.length,e}function $read(e){return e.pos>=e.count?-1:255&e.buf[e.pos++]}function $read_0(e,r,t,o){return e.pos>=e.count?-1:(o=Math.min(o,e.count-e.pos),arraycopy(e.buf,e.pos,r,t,o),e.pos+=o,o)}function $ByteArrayOutputStream(e){return e.buf=initDim(32),e.count=0,e}function $toByteArray(e){var r=e.buf;return r.length=e.count,r}function $write(e,r){e.buf[e.count++]=r<<24>>24}function $write_0(e,r,t,o){arraycopy(r,t,e.buf,e.count,o),e.count+=o}function $getChars(e,r,t,o,i){var n;for(n=r;n<t;++n)o[i++]=e.charCodeAt(n)}function arraycopy(e,r,t,o,i){for(var n=0;n<i;++n)t[o+n]=e[r+n]}function $configure(e,r){$SetDictionarySize_0(r,1<<e.s),r._numFastBytes=e.f,$SetMatchFinder(r,e.m),r._numLiteralPosStateBits=0,r._numLiteralContextBits=3,r._posStateBits=2,r._posStateMask=3}function $init(e,r,t,o,i,n){var s,c;if(compare(o,N1_longLit)<0)throw new Error("invalid length "+o);for(e.length_0=o,$configure(i,s=$Encoder({})),s._writeEndMark=n,$WriteCoderProperties(s,t),c=0;c<64;c+=8)$write(t,255&lowBits_0(shr(o,c)));e.chunker=(s._needReleaseMFStream=0,s._inStream=r,s._finished=0,$Create_2(s),s._rangeEncoder.Stream=t,$Init_4(s),$FillDistancesPrices(s),$FillAlignPrices(s),s._lenEncoder._tableSize=s._numFastBytes+1-2,$UpdateTables(s._lenEncoder,1<<s._posStateBits),s._repMatchLenEncoder._tableSize=s._numFastBytes+1-2,$UpdateTables(s._repMatchLenEncoder,1<<s._posStateBits),s.nowPos64=P0_longLit,$Chunker_0({},s))}function $LZMAByteArrayCompressor(e,r,t,o){return e.output=$ByteArrayOutputStream({}),$init(e,$ByteArrayInputStream({},r),e.output,fromInt(r.length),t,o),e}function $init_0(e,r,t){var o,i,n,s,c="",_=[];for(i=0;i<5;++i){if(-1==(n=$read(r)))throw new Error("truncated input");_[i]=n<<24>>24}if(!$SetDecoderProperties(o=$Decoder({}),_))throw new Error("corrupted input");for(i=0;i<64;i+=8){if(-1==(n=$read(r)))throw new Error("truncated input");1==(n=n.toString(16)).length&&(n="0"+n),c=n+""+c}/^0+$|^f+$/i.test(c)?e.length_0=N1_longLit:(s=parseInt(c,16),e.length_0=s>4294967295?N1_longLit:fromInt(s)),e.chunker=$CodeInChunks(o,r,t,e.length_0)}function $LZMAByteArrayDecompressor(e,r){return e.output=$ByteArrayOutputStream({}),$init_0(e,$ByteArrayInputStream({},r),e.output),e}function $Create_4(e,r,t,o){var i;e._keepSizeBefore=r,e._keepSizeAfter=t,i=r+t+o,null!=e._bufferBase&&e._blockSize==i||(e._bufferBase=null,e._blockSize=i,e._bufferBase=initDim(e._blockSize)),e._pointerToLastSafePosition=e._blockSize-t}function $GetIndexByte(e,r){return e._bufferBase[e._bufferOffset+e._pos+r]}function $GetMatchLen(e,r,t,o){var i,n;for(e._streamEndWasReached&&e._pos+r+o>e._streamPos&&(o=e._streamPos-(e._pos+r)),++t,n=e._bufferOffset+e._pos+r,i=0;i<o&&e._bufferBase[n+i]==e._bufferBase[n+i-t];++i);return i}function $GetNumAvailableBytes(e){return e._streamPos-e._pos}function $MoveBlock(e){var r,t,o;for((o=e._bufferOffset+e._pos-e._keepSizeBefore)>0&&--o,t=e._bufferOffset+e._streamPos-o,r=0;r<t;++r)e._bufferBase[r]=e._bufferBase[o+r];e._bufferOffset-=o}function $MovePos_1(e){++e._pos,e._pos>e._posLimit&&(e._bufferOffset+e._pos>e._pointerToLastSafePosition&&$MoveBlock(e),$ReadBlock(e))}function $ReadBlock(e){var r,t;if(!e._streamEndWasReached)for(;;){if(!(t=-e._bufferOffset+e._blockSize-e._streamPos))return;if(-1==(r=$read_0(e._stream,e._bufferBase,e._bufferOffset+e._streamPos,t)))return e._posLimit=e._streamPos,e._bufferOffset+e._posLimit>e._pointerToLastSafePosition&&(e._posLimit=e._pointerToLastSafePosition-e._bufferOffset),void(e._streamEndWasReached=1);e._streamPos+=r,e._streamPos>=e._pos+e._keepSizeAfter&&(e._posLimit=e._streamPos-e._keepSizeAfter)}}function $ReduceOffsets(e,r){e._bufferOffset+=r,e._posLimit-=r,e._pos-=r,e._streamPos-=r}var CrcTable=function(){var e,r,t,o=[];for(e=0;e<256;++e){for(t=e,r=0;r<8;++r)0!=(1&t)?t=t>>>1^-306674912:t>>>=1;o[e]=t}return o}();function $Create_3(e,r,t,o,i){var n,s;r<1073741567&&(e._cutValue=16+(o>>1),$Create_4(e,r+t,o+i,256+~~((r+t+o+i)/2)),e._matchMaxLen=o,n=r+1,e._cyclicBufferSize!=n&&(e._son=initDim(2*(e._cyclicBufferSize=n))),s=65536,e.HASH_ARRAY&&(s=r-1,s|=s>>1,s|=s>>2,s|=s>>4,s|=s>>8,s>>=1,(s|=65535)>16777216&&(s>>=1),e._hashMask=s,++s,s+=e.kFixHashSize),s!=e._hashSizeSum&&(e._hash=initDim(e._hashSizeSum=s)))}function $GetMatches(e,r){var t,o,i,n,s,c,_,a,d,u,m,f,p,P,l,$,h,B,v,S,D;if(e._pos+e._matchMaxLen<=e._streamPos)P=e._matchMaxLen;else if((P=e._streamPos-e._pos)<e.kMinMatchCheck)return $MovePos_0(e),0;for(h=0,l=e._pos>e._cyclicBufferSize?e._pos-e._cyclicBufferSize:0,o=e._bufferOffset+e._pos,$=1,a=0,d=0,e.HASH_ARRAY?(a=1023&(D=CrcTable[255&e._bufferBase[o]]^255&e._bufferBase[o+1]),d=65535&(D^=(255&e._bufferBase[o+2])<<8),u=(D^CrcTable[255&e._bufferBase[o+3]]<<5)&e._hashMask):u=255&e._bufferBase[o]^(255&e._bufferBase[o+1])<<8,i=e._hash[e.kFixHashSize+u]||0,e.HASH_ARRAY&&(n=e._hash[a]||0,s=e._hash[1024+d]||0,e._hash[a]=e._pos,e._hash[1024+d]=e._pos,n>l&&e._bufferBase[e._bufferOffset+n]==e._bufferBase[o]&&(r[h++]=$=2,r[h++]=e._pos-n-1),s>l&&e._bufferBase[e._bufferOffset+s]==e._bufferBase[o]&&(s==n&&(h-=2),r[h++]=$=3,r[h++]=e._pos-s-1,n=s),0!=h&&n==i&&(h-=2,$=1)),e._hash[e.kFixHashSize+u]=e._pos,v=1+(e._cyclicBufferPos<<1),S=e._cyclicBufferPos<<1,f=p=e.kNumHashDirectBytes,0!=e.kNumHashDirectBytes&&i>l&&e._bufferBase[e._bufferOffset+i+e.kNumHashDirectBytes]!=e._bufferBase[o+e.kNumHashDirectBytes]&&(r[h++]=$=e.kNumHashDirectBytes,r[h++]=e._pos-i-1),t=e._cutValue;;){if(i<=l||0==t--){e._son[v]=e._son[S]=0;break}if(c=((_=e._pos-i)<=e._cyclicBufferPos?e._cyclicBufferPos-_:e._cyclicBufferPos-_+e._cyclicBufferSize)<<1,B=e._bufferOffset+i,m=f<p?f:p,e._bufferBase[B+m]==e._bufferBase[o+m]){for(;++m!=P&&e._bufferBase[B+m]==e._bufferBase[o+m];);if($<m&&(r[h++]=$=m,r[h++]=_-1,m==P)){e._son[S]=e._son[c],e._son[v]=e._son[c+1];break}}(255&e._bufferBase[B+m])<(255&e._bufferBase[o+m])?(e._son[S]=i,S=c+1,i=e._son[S],p=m):(e._son[v]=i,v=c,i=e._son[v],f=m)}return $MovePos_0(e),h}function $Init_5(e){e._bufferOffset=0,e._pos=0,e._streamPos=0,e._streamEndWasReached=0,$ReadBlock(e),e._cyclicBufferPos=0,$ReduceOffsets(e,-1)}function $MovePos_0(e){var r;++e._cyclicBufferPos>=e._cyclicBufferSize&&(e._cyclicBufferPos=0),$MovePos_1(e),1073741823==e._pos&&(r=e._pos-e._cyclicBufferSize,$NormalizeLinks(e._son,2*e._cyclicBufferSize,r),$NormalizeLinks(e._hash,e._hashSizeSum,r),$ReduceOffsets(e,r))}function $NormalizeLinks(e,r,t){var o,i;for(o=0;o<r;++o)(i=e[o]||0)<=t?i=0:i-=t,e[o]=i}function $SetType(e,r){e.HASH_ARRAY=r>2,e.HASH_ARRAY?(e.kNumHashDirectBytes=0,e.kMinMatchCheck=4,e.kFixHashSize=66560):(e.kNumHashDirectBytes=2,e.kMinMatchCheck=3,e.kFixHashSize=0)}function $Skip(e,r){var t,o,i,n,s,c,_,a,d,u,m,f,p,P,l,$,h;do{if(e._pos+e._matchMaxLen<=e._streamPos)f=e._matchMaxLen;else if((f=e._streamPos-e._pos)<e.kMinMatchCheck){$MovePos_0(e);continue}for(p=e._pos>e._cyclicBufferSize?e._pos-e._cyclicBufferSize:0,o=e._bufferOffset+e._pos,e.HASH_ARRAY?(c=1023&(h=CrcTable[255&e._bufferBase[o]]^255&e._bufferBase[o+1]),e._hash[c]=e._pos,_=65535&(h^=(255&e._bufferBase[o+2])<<8),e._hash[1024+_]=e._pos,a=(h^CrcTable[255&e._bufferBase[o+3]]<<5)&e._hashMask):a=255&e._bufferBase[o]^(255&e._bufferBase[o+1])<<8,i=e._hash[e.kFixHashSize+a],e._hash[e.kFixHashSize+a]=e._pos,l=1+(e._cyclicBufferPos<<1),$=e._cyclicBufferPos<<1,u=m=e.kNumHashDirectBytes,t=e._cutValue;;){if(i<=p||0==t--){e._son[l]=e._son[$]=0;break}if(n=((s=e._pos-i)<=e._cyclicBufferPos?e._cyclicBufferPos-s:e._cyclicBufferPos-s+e._cyclicBufferSize)<<1,P=e._bufferOffset+i,d=u<m?u:m,e._bufferBase[P+d]==e._bufferBase[o+d]){for(;++d!=f&&e._bufferBase[P+d]==e._bufferBase[o+d];);if(d==f){e._son[$]=e._son[n],e._son[l]=e._son[n+1];break}}(255&e._bufferBase[P+d])<(255&e._bufferBase[o+d])?(e._son[$]=i,$=n+1,i=e._son[$],m=d):(e._son[l]=i,l=n,i=e._son[l],u=d)}$MovePos_0(e)}while(0!=--r)}function $CopyBlock(e,r,t){var o=e._pos-r-1;for(o<0&&(o+=e._windowSize);0!=t;--t)o>=e._windowSize&&(o=0),e._buffer[e._pos++]=e._buffer[o++],e._pos>=e._windowSize&&$Flush_0(e)}function $Create_5(e,r){null!=e._buffer&&e._windowSize==r||(e._buffer=initDim(r)),e._windowSize=r,e._pos=0,e._streamPos=0}function $Flush_0(e){var r=e._pos-e._streamPos;r&&($write_0(e._stream,e._buffer,e._streamPos,r),e._pos>=e._windowSize&&(e._pos=0),e._streamPos=e._pos)}function $GetByte(e,r){var t=e._pos-r-1;return t<0&&(t+=e._windowSize),e._buffer[t]}function $PutByte(e,r){e._buffer[e._pos++]=r,e._pos>=e._windowSize&&$Flush_0(e)}function $ReleaseStream(e){$Flush_0(e),e._stream=null}function GetLenToPosState(e){return(e-=2)<4?e:3}function StateUpdateChar(e){return e<4?0:e<10?e-3:e-6}function $Chunker_0(e,r){return e.encoder=r,e.decoder=null,e.alive=1,e}function $Chunker(e,r){return e.decoder=r,e.encoder=null,e.alive=1,e}function $processChunk(e){if(!e.alive)throw new Error("bad state");return e.encoder?$processEncoderChunk(e):$processDecoderChunk(e),e.alive}function $processDecoderChunk(e){var r=$CodeOneChunk(e.decoder);if(-1==r)throw new Error("corrupted input");e.inBytesProcessed=N1_longLit,e.outBytesProcessed=e.decoder.nowPos64,(r||compare(e.decoder.outSize,P0_longLit)>=0&&compare(e.decoder.nowPos64,e.decoder.outSize)>=0)&&($Flush_0(e.decoder.m_OutWindow),$ReleaseStream(e.decoder.m_OutWindow),e.decoder.m_RangeDecoder.Stream=null,e.alive=0)}function $processEncoderChunk(e){$CodeOneBlock(e.encoder,e.encoder.processedInSize,e.encoder.processedOutSize,e.encoder.finished),e.inBytesProcessed=e.encoder.processedInSize[0],e.encoder.finished[0]&&($ReleaseStreams(e.encoder),e.alive=0)}function $CodeInChunks(e,r,t,o){return e.m_RangeDecoder.Stream=r,$ReleaseStream(e.m_OutWindow),e.m_OutWindow._stream=t,$Init_1(e),e.state=0,e.rep0=0,e.rep1=0,e.rep2=0,e.rep3=0,e.outSize=o,e.nowPos64=P0_longLit,e.prevByte=0,$Chunker({},e)}function $CodeOneChunk(e){var r,t,o,i,n,s;if(s=lowBits_0(e.nowPos64)&e.m_PosStateMask,$DecodeBit(e.m_RangeDecoder,e.m_IsMatchDecoders,(e.state<<4)+s)){if($DecodeBit(e.m_RangeDecoder,e.m_IsRepDecoders,e.state))o=0,$DecodeBit(e.m_RangeDecoder,e.m_IsRepG0Decoders,e.state)?($DecodeBit(e.m_RangeDecoder,e.m_IsRepG1Decoders,e.state)?($DecodeBit(e.m_RangeDecoder,e.m_IsRepG2Decoders,e.state)?(t=e.rep3,e.rep3=e.rep2):t=e.rep2,e.rep2=e.rep1):t=e.rep1,e.rep1=e.rep0,e.rep0=t):$DecodeBit(e.m_RangeDecoder,e.m_IsRep0LongDecoders,(e.state<<4)+s)||(e.state=e.state<7?9:11,o=1),o||(o=$Decode(e.m_RepLenDecoder,e.m_RangeDecoder,s)+2,e.state=e.state<7?8:11);else if(e.rep3=e.rep2,e.rep2=e.rep1,e.rep1=e.rep0,o=2+$Decode(e.m_LenDecoder,e.m_RangeDecoder,s),e.state=e.state<7?7:10,(n=$Decode_0(e.m_PosSlotDecoder[GetLenToPosState(o)],e.m_RangeDecoder))>=4){if(i=(n>>1)-1,e.rep0=(2|1&n)<<i,n<14)e.rep0+=ReverseDecode(e.m_PosDecoders,e.rep0-n-1,e.m_RangeDecoder,i);else if(e.rep0+=$DecodeDirectBits(e.m_RangeDecoder,i-4)<<4,e.rep0+=$ReverseDecode(e.m_PosAlignDecoder,e.m_RangeDecoder),e.rep0<0)return-1==e.rep0?1:-1}else e.rep0=n;if(compare(fromInt(e.rep0),e.nowPos64)>=0||e.rep0>=e.m_DictionarySizeCheck)return-1;$CopyBlock(e.m_OutWindow,e.rep0,o),e.nowPos64=add(e.nowPos64,fromInt(o)),e.prevByte=$GetByte(e.m_OutWindow,0)}else r=$GetDecoder(e.m_LiteralDecoder,lowBits_0(e.nowPos64),e.prevByte),e.state<7?e.prevByte=$DecodeNormal(r,e.m_RangeDecoder):e.prevByte=$DecodeWithMatchByte(r,e.m_RangeDecoder,$GetByte(e.m_OutWindow,e.rep0)),$PutByte(e.m_OutWindow,e.prevByte),e.state=StateUpdateChar(e.state),e.nowPos64=add(e.nowPos64,P1_longLit);return 0}function $Decoder(e){e.m_OutWindow={},e.m_RangeDecoder={},e.m_IsMatchDecoders=initDim(192),e.m_IsRepDecoders=initDim(12),e.m_IsRepG0Decoders=initDim(12),e.m_IsRepG1Decoders=initDim(12),e.m_IsRepG2Decoders=initDim(12),e.m_IsRep0LongDecoders=initDim(192),e.m_PosSlotDecoder=initDim(4),e.m_PosDecoders=initDim(114),e.m_PosAlignDecoder=$BitTreeDecoder({},4),e.m_LenDecoder=$Decoder$LenDecoder({}),e.m_RepLenDecoder=$Decoder$LenDecoder({}),e.m_LiteralDecoder={};for(var r=0;r<4;++r)e.m_PosSlotDecoder[r]=$BitTreeDecoder({},6);return e}function $Init_1(e){e.m_OutWindow._streamPos=0,e.m_OutWindow._pos=0,InitBitModels(e.m_IsMatchDecoders),InitBitModels(e.m_IsRep0LongDecoders),InitBitModels(e.m_IsRepDecoders),InitBitModels(e.m_IsRepG0Decoders),InitBitModels(e.m_IsRepG1Decoders),InitBitModels(e.m_IsRepG2Decoders),InitBitModels(e.m_PosDecoders),$Init_0(e.m_LiteralDecoder);for(var r=0;r<4;++r)InitBitModels(e.m_PosSlotDecoder[r].Models);$Init(e.m_LenDecoder),$Init(e.m_RepLenDecoder),InitBitModels(e.m_PosAlignDecoder.Models),$Init_8(e.m_RangeDecoder)}function $SetDecoderProperties(e,r){var t,o,i,n,s,c,_;if(r.length<5)return 0;for(i=(_=255&r[0])%9,n=(c=~~(_/9))%5,s=~~(c/5),t=0,o=0;o<4;++o)t+=(255&r[1+o])<<8*o;return t>99999999||!$SetLcLpPb(e,i,n,s)?0:$SetDictionarySize(e,t)}function $SetDictionarySize(e,r){return r<0?0:(e.m_DictionarySize!=r&&(e.m_DictionarySize=r,e.m_DictionarySizeCheck=Math.max(e.m_DictionarySize,1),$Create_5(e.m_OutWindow,Math.max(e.m_DictionarySizeCheck,4096))),1)}function $SetLcLpPb(e,r,t,o){if(r>8||t>4||o>4)return 0;$Create_0(e.m_LiteralDecoder,t,r);var i=1<<o;return $Create(e.m_LenDecoder,i),$Create(e.m_RepLenDecoder,i),e.m_PosStateMask=i-1,1}function $Create(e,r){for(;e.m_NumPosStates<r;++e.m_NumPosStates)e.m_LowCoder[e.m_NumPosStates]=$BitTreeDecoder({},3),e.m_MidCoder[e.m_NumPosStates]=$BitTreeDecoder({},3)}function $Decode(e,r,t){if(!$DecodeBit(r,e.m_Choice,0))return $Decode_0(e.m_LowCoder[t],r);var o=8;return $DecodeBit(r,e.m_Choice,1)?o+=8+$Decode_0(e.m_HighCoder,r):o+=$Decode_0(e.m_MidCoder[t],r),o}function $Decoder$LenDecoder(e){return e.m_Choice=initDim(2),e.m_LowCoder=initDim(16),e.m_MidCoder=initDim(16),e.m_HighCoder=$BitTreeDecoder({},8),e.m_NumPosStates=0,e}function $Init(e){InitBitModels(e.m_Choice);for(var r=0;r<e.m_NumPosStates;++r)InitBitModels(e.m_LowCoder[r].Models),InitBitModels(e.m_MidCoder[r].Models);InitBitModels(e.m_HighCoder.Models)}function $Create_0(e,r,t){var o,i;if(null==e.m_Coders||e.m_NumPrevBits!=t||e.m_NumPosBits!=r)for(e.m_NumPosBits=r,e.m_PosMask=(1<<r)-1,e.m_NumPrevBits=t,i=1<<e.m_NumPrevBits+e.m_NumPosBits,e.m_Coders=initDim(i),o=0;o<i;++o)e.m_Coders[o]=$Decoder$LiteralDecoder$Decoder2({})}function $GetDecoder(e,r,t){return e.m_Coders[((r&e.m_PosMask)<<e.m_NumPrevBits)+((255&t)>>>8-e.m_NumPrevBits)]}function $Init_0(e){var r,t;for(t=1<<e.m_NumPrevBits+e.m_NumPosBits,r=0;r<t;++r)InitBitModels(e.m_Coders[r].m_Decoders)}function $DecodeNormal(e,r){var t=1;do{t=t<<1|$DecodeBit(r,e.m_Decoders,t)}while(t<256);return t<<24>>24}function $DecodeWithMatchByte(e,r,t){var o,i,n=1;do{if(i=t>>7&1,t<<=1,n=n<<1|(o=$DecodeBit(r,e.m_Decoders,(1+i<<8)+n)),i!=o){for(;n<256;)n=n<<1|$DecodeBit(r,e.m_Decoders,n);break}}while(n<256);return n<<24>>24}function $Decoder$LiteralDecoder$Decoder2(e){return e.m_Decoders=initDim(768),e}var g_FastPos=function(){var e,r,t,o=2,i=[0,1];for(t=2;t<22;++t)for(r=1<<(t>>1)-1,e=0;e<r;++e,++o)i[o]=t<<24>>24;return i}();function $Backward(e,r){var t,o,i,n;e._optimumEndIndex=r,i=e._optimum[r].PosPrev,o=e._optimum[r].BackPrev;do{e._optimum[r].Prev1IsChar&&($MakeAsChar(e._optimum[i]),e._optimum[i].PosPrev=i-1,e._optimum[r].Prev2&&(e._optimum[i-1].Prev1IsChar=0,e._optimum[i-1].PosPrev=e._optimum[r].PosPrev2,e._optimum[i-1].BackPrev=e._optimum[r].BackPrev2)),n=i,t=o,o=e._optimum[n].BackPrev,i=e._optimum[n].PosPrev,e._optimum[n].BackPrev=t,e._optimum[n].PosPrev=r,r=n}while(r>0);return e.backRes=e._optimum[0].BackPrev,e._optimumCurrentIndex=e._optimum[0].PosPrev,e._optimumCurrentIndex}function $BaseInit(e){e._state=0,e._previousByte=0;for(var r=0;r<4;++r)e._repDistances[r]=0}function $CodeOneBlock(e,r,t,o){var i,n,s,c,_,a,d,u,m,f,p,P,l,$,h;if(r[0]=P0_longLit,t[0]=P0_longLit,o[0]=1,e._inStream&&(e._matchFinder._stream=e._inStream,$Init_5(e._matchFinder),e._needReleaseMFStream=1,e._inStream=null),!e._finished){if(e._finished=1,$=e.nowPos64,eq(e.nowPos64,P0_longLit)){if(!$GetNumAvailableBytes(e._matchFinder))return void $Flush(e,lowBits_0(e.nowPos64));$ReadMatchDistances(e),l=lowBits_0(e.nowPos64)&e._posStateMask,$Encode_3(e._rangeEncoder,e._isMatch,(e._state<<4)+l,0),e._state=StateUpdateChar(e._state),s=$GetIndexByte(e._matchFinder,-e._additionalOffset),$Encode_1($GetSubCoder(e._literalEncoder,lowBits_0(e.nowPos64),e._previousByte),e._rangeEncoder,s),e._previousByte=s,--e._additionalOffset,e.nowPos64=add(e.nowPos64,P1_longLit)}if($GetNumAvailableBytes(e._matchFinder))for(;;){if(d=$GetOptimum(e,lowBits_0(e.nowPos64)),f=e.backRes,l=lowBits_0(e.nowPos64)&e._posStateMask,n=(e._state<<4)+l,1==d&&-1==f)$Encode_3(e._rangeEncoder,e._isMatch,n,0),s=$GetIndexByte(e._matchFinder,-e._additionalOffset),h=$GetSubCoder(e._literalEncoder,lowBits_0(e.nowPos64),e._previousByte),e._state<7?$Encode_1(h,e._rangeEncoder,s):(m=$GetIndexByte(e._matchFinder,-e._repDistances[0]-1-e._additionalOffset),$EncodeMatched(h,e._rangeEncoder,m,s)),e._previousByte=s,e._state=StateUpdateChar(e._state);else{if($Encode_3(e._rangeEncoder,e._isMatch,n,1),f<4){if($Encode_3(e._rangeEncoder,e._isRep,e._state,1),f?($Encode_3(e._rangeEncoder,e._isRepG0,e._state,1),1==f?$Encode_3(e._rangeEncoder,e._isRepG1,e._state,0):($Encode_3(e._rangeEncoder,e._isRepG1,e._state,1),$Encode_3(e._rangeEncoder,e._isRepG2,e._state,f-2))):($Encode_3(e._rangeEncoder,e._isRepG0,e._state,0),$Encode_3(e._rangeEncoder,e._isRep0Long,n,1==d?0:1)),1==d?e._state=e._state<7?9:11:($Encode_0(e._repMatchLenEncoder,e._rangeEncoder,d-2,l),e._state=e._state<7?8:11),c=e._repDistances[f],0!=f){for(a=f;a>=1;--a)e._repDistances[a]=e._repDistances[a-1];e._repDistances[0]=c}}else{for($Encode_3(e._rangeEncoder,e._isRep,e._state,0),e._state=e._state<7?7:10,$Encode_0(e._lenEncoder,e._rangeEncoder,d-2,l),P=GetPosSlot(f-=4),u=GetLenToPosState(d),$Encode_2(e._posSlotEncoder[u],e._rangeEncoder,P),P>=4&&(p=f-(i=(2|1&P)<<(_=(P>>1)-1)),P<14?ReverseEncode(e._posEncoders,i-P-1,e._rangeEncoder,_,p):($EncodeDirectBits(e._rangeEncoder,p>>4,_-4),$ReverseEncode(e._posAlignEncoder,e._rangeEncoder,15&p),++e._alignPriceCount)),c=f,a=3;a>=1;--a)e._repDistances[a]=e._repDistances[a-1];e._repDistances[0]=c,++e._matchPriceCount}e._previousByte=$GetIndexByte(e._matchFinder,d-1-e._additionalOffset)}if(e._additionalOffset-=d,e.nowPos64=add(e.nowPos64,fromInt(d)),!e._additionalOffset){if(e._matchPriceCount>=128&&$FillDistancesPrices(e),e._alignPriceCount>=16&&$FillAlignPrices(e),r[0]=e.nowPos64,t[0]=$GetProcessedSizeAdd(e._rangeEncoder),!$GetNumAvailableBytes(e._matchFinder))return void $Flush(e,lowBits_0(e.nowPos64));if(compare(sub(e.nowPos64,$),[4096,0])>=0)return e._finished=0,void(o[0]=0)}}else $Flush(e,lowBits_0(e.nowPos64))}}function $Create_2(e){var r,t;e._matchFinder||(r={},t=4,e._matchFinderType||(t=2),$SetType(r,t),e._matchFinder=r),$Create_1(e._literalEncoder,e._numLiteralPosStateBits,e._numLiteralContextBits),e._dictionarySize==e._dictionarySizePrev&&e._numFastBytesPrev==e._numFastBytes||($Create_3(e._matchFinder,e._dictionarySize,4096,e._numFastBytes,274),e._dictionarySizePrev=e._dictionarySize,e._numFastBytesPrev=e._numFastBytes)}function $Encoder(e){var r;for(e._repDistances=initDim(4),e._optimum=[],e._rangeEncoder={},e._isMatch=initDim(192),e._isRep=initDim(12),e._isRepG0=initDim(12),e._isRepG1=initDim(12),e._isRepG2=initDim(12),e._isRep0Long=initDim(192),e._posSlotEncoder=[],e._posEncoders=initDim(114),e._posAlignEncoder=$BitTreeEncoder({},4),e._lenEncoder=$Encoder$LenPriceTableEncoder({}),e._repMatchLenEncoder=$Encoder$LenPriceTableEncoder({}),e._literalEncoder={},e._matchDistances=[],e._posSlotPrices=[],e._distancesPrices=[],e._alignPrices=initDim(16),e.reps=initDim(4),e.repLens=initDim(4),e.processedInSize=[P0_longLit],e.processedOutSize=[P0_longLit],e.finished=[0],e.properties=initDim(5),e.tempPrices=initDim(128),e._longestMatchLength=0,e._matchFinderType=1,e._numDistancePairs=0,e._numFastBytesPrev=-1,e.backRes=0,r=0;r<4096;++r)e._optimum[r]={};for(r=0;r<4;++r)e._posSlotEncoder[r]=$BitTreeEncoder({},6);return e}function $FillAlignPrices(e){for(var r=0;r<16;++r)e._alignPrices[r]=$ReverseGetPrice(e._posAlignEncoder,r);e._alignPriceCount=0}function $FillDistancesPrices(e){var r,t,o,i,n,s,c,_;for(i=4;i<128;++i)r=(2|1&(s=GetPosSlot(i)))<<(o=(s>>1)-1),e.tempPrices[i]=ReverseGetPrice(e._posEncoders,r-s-1,o,i-r);for(n=0;n<4;++n){for(t=e._posSlotEncoder[n],c=n<<6,s=0;s<e._distTableSize;++s)e._posSlotPrices[c+s]=$GetPrice_1(t,s);for(s=14;s<e._distTableSize;++s)e._posSlotPrices[c+s]+=(s>>1)-1-4<<6;for(_=128*n,i=0;i<4;++i)e._distancesPrices[_+i]=e._posSlotPrices[c+i];for(;i<128;++i)e._distancesPrices[_+i]=e._posSlotPrices[c+GetPosSlot(i)]+e.tempPrices[i]}e._matchPriceCount=0}function $Flush(e,r){$ReleaseMFStream(e),$WriteEndMarker(e,r&e._posStateMask);for(var t=0;t<5;++t)$ShiftLow(e._rangeEncoder)}function $GetOptimum(e,r){var t,o,i,n,s,c,_,a,d,u,m,f,p,P,l,$,h,B,v,S,D,M,b,E,k,g,R,C,y,L,I,w,G,F,z,A,x,N,O,T,H,W,U,Y;if(e._optimumEndIndex!=e._optimumCurrentIndex)return p=e._optimum[e._optimumCurrentIndex].PosPrev-e._optimumCurrentIndex,e.backRes=e._optimum[e._optimumCurrentIndex].BackPrev,e._optimumCurrentIndex=e._optimum[e._optimumCurrentIndex].PosPrev,p;if(e._optimumCurrentIndex=e._optimumEndIndex=0,e._longestMatchWasFound?(f=e._longestMatchLength,e._longestMatchWasFound=0):f=$ReadMatchDistances(e),g=e._numDistancePairs,(E=$GetNumAvailableBytes(e._matchFinder)+1)<2)return e.backRes=-1,1;for(E>273&&(E=273),O=0,d=0;d<4;++d)e.reps[d]=e._repDistances[d],e.repLens[d]=$GetMatchLen(e._matchFinder,-1,e.reps[d],273),e.repLens[d]>e.repLens[O]&&(O=d);if(e.repLens[O]>=e._numFastBytes)return e.backRes=O,$MovePos(e,(p=e.repLens[O])-1),p;if(f>=e._numFastBytes)return e.backRes=e._matchDistances[g-1]+4,$MovePos(e,f-1),f;if(_=$GetIndexByte(e._matchFinder,-1),h=$GetIndexByte(e._matchFinder,-e._repDistances[0]-1-1),f<2&&_!=h&&e.repLens[O]<2)return e.backRes=-1,1;if(e._optimum[0].State=e._state,G=r&e._posStateMask,e._optimum[1].Price=ProbPrices[e._isMatch[(e._state<<4)+G]>>>2]+$GetPrice_0($GetSubCoder(e._literalEncoder,r,e._previousByte),e._state>=7,h,_),$MakeAsChar(e._optimum[1]),N=(B=ProbPrices[2048-e._isMatch[(e._state<<4)+G]>>>2])+ProbPrices[2048-e._isRep[e._state]>>>2],h==_&&(T=N+$GetRepLen1Price(e,e._state,G))<e._optimum[1].Price&&(e._optimum[1].Price=T,$MakeAsShortRep(e._optimum[1])),(m=f>=e.repLens[O]?f:e.repLens[O])<2)return e.backRes=e._optimum[1].BackPrev,1;e._optimum[1].PosPrev=0,e._optimum[0].Backs0=e.reps[0],e._optimum[0].Backs1=e.reps[1],e._optimum[0].Backs2=e.reps[2],e._optimum[0].Backs3=e.reps[3],u=m;do{e._optimum[u--].Price=268435455}while(u>=2);for(d=0;d<4;++d)if(!((x=e.repLens[d])<2)){z=N+$GetPureRepPrice(e,d,e._state,G);do{(n=z+$GetPrice(e._repMatchLenEncoder,x-2,G))<(L=e._optimum[x]).Price&&(L.Price=n,L.PosPrev=0,L.BackPrev=d,L.Prev1IsChar=0)}while(--x>=2)}if(b=B+ProbPrices[e._isRep[e._state]>>>2],(u=e.repLens[0]>=2?e.repLens[0]+1:2)<=f){for(R=0;u>e._matchDistances[R];)R+=2;for(;(n=b+$GetPosLenPrice(e,a=e._matchDistances[R+1],u,G))<(L=e._optimum[u]).Price&&(L.Price=n,L.PosPrev=0,L.BackPrev=a+4,L.Prev1IsChar=0),u!=e._matchDistances[R]||(R+=2)!=g;++u);}for(t=0;;){if(++t==m)return $Backward(e,t);if(v=$ReadMatchDistances(e),g=e._numDistancePairs,v>=e._numFastBytes)return e._longestMatchLength=v,e._longestMatchWasFound=1,$Backward(e,t);if(++r,w=e._optimum[t].PosPrev,e._optimum[t].Prev1IsChar?(--w,e._optimum[t].Prev2?(W=e._optimum[e._optimum[t].PosPrev2].State,W=e._optimum[t].BackPrev2<4?W<7?8:11:W<7?7:10):W=e._optimum[w].State,W=StateUpdateChar(W)):W=e._optimum[w].State,w==t-1?W=e._optimum[t].BackPrev?StateUpdateChar(W):W<7?9:11:(e._optimum[t].Prev1IsChar&&e._optimum[t].Prev2?(w=e._optimum[t].PosPrev2,I=e._optimum[t].BackPrev2,W=W<7?8:11):W=(I=e._optimum[t].BackPrev)<4?W<7?8:11:W<7?7:10,y=e._optimum[w],I<4?I?1==I?(e.reps[0]=y.Backs1,e.reps[1]=y.Backs0,e.reps[2]=y.Backs2,e.reps[3]=y.Backs3):2==I?(e.reps[0]=y.Backs2,e.reps[1]=y.Backs0,e.reps[2]=y.Backs1,e.reps[3]=y.Backs3):(e.reps[0]=y.Backs3,e.reps[1]=y.Backs0,e.reps[2]=y.Backs1,e.reps[3]=y.Backs2):(e.reps[0]=y.Backs0,e.reps[1]=y.Backs1,e.reps[2]=y.Backs2,e.reps[3]=y.Backs3):(e.reps[0]=I-4,e.reps[1]=y.Backs0,e.reps[2]=y.Backs1,e.reps[3]=y.Backs2)),e._optimum[t].State=W,e._optimum[t].Backs0=e.reps[0],e._optimum[t].Backs1=e.reps[1],e._optimum[t].Backs2=e.reps[2],e._optimum[t].Backs3=e.reps[3],c=e._optimum[t].Price,_=$GetIndexByte(e._matchFinder,-1),h=$GetIndexByte(e._matchFinder,-e.reps[0]-1-1),G=r&e._posStateMask,S=0,(o=c+ProbPrices[e._isMatch[(W<<4)+G]>>>2]+$GetPrice_0($GetSubCoder(e._literalEncoder,r,$GetIndexByte(e._matchFinder,-2)),W>=7,h,_))<(D=e._optimum[t+1]).Price&&(D.Price=o,D.PosPrev=t,D.BackPrev=-1,D.Prev1IsChar=0,S=1),N=(B=c+ProbPrices[2048-e._isMatch[(W<<4)+G]>>>2])+ProbPrices[2048-e._isRep[W]>>>2],h!=_||D.PosPrev<t&&!D.BackPrev||(T=N+(ProbPrices[e._isRepG0[W]>>>2]+ProbPrices[e._isRep0Long[(W<<4)+G]>>>2]))<=D.Price&&(D.Price=T,D.PosPrev=t,D.BackPrev=0,D.Prev1IsChar=0,S=1),!((E=k=4095-t<(k=$GetNumAvailableBytes(e._matchFinder)+1)?4095-t:k)<2)){if(E>e._numFastBytes&&(E=e._numFastBytes),!S&&h!=_&&(Y=Math.min(k-1,e._numFastBytes),(l=$GetMatchLen(e._matchFinder,0,e.reps[0],Y))>=2)){for(U=StateUpdateChar(W),F=r+1&e._posStateMask,M=o+ProbPrices[2048-e._isMatch[(U<<4)+F]>>>2]+ProbPrices[2048-e._isRep[U]>>>2],C=t+1+l;m<C;)e._optimum[++m].Price=268435455;(n=M+($GetPrice(e._repMatchLenEncoder,l-2,F)+$GetPureRepPrice(e,0,U,F)))<(L=e._optimum[C]).Price&&(L.Price=n,L.PosPrev=t+1,L.BackPrev=0,L.Prev1IsChar=1,L.Prev2=0)}for(H=2,A=0;A<4;++A)if(!((P=$GetMatchLen(e._matchFinder,-1,e.reps[A],E))<2)){$=P;do{for(;m<t+P;)e._optimum[++m].Price=268435455;(n=N+($GetPrice(e._repMatchLenEncoder,P-2,G)+$GetPureRepPrice(e,A,W,G)))<(L=e._optimum[t+P]).Price&&(L.Price=n,L.PosPrev=t,L.BackPrev=A,L.Prev1IsChar=0)}while(--P>=2);if(P=$,A||(H=P+1),P<k&&(Y=Math.min(k-1-P,e._numFastBytes),(l=$GetMatchLen(e._matchFinder,P,e.reps[A],Y))>=2)){for(U=W<7?8:11,F=r+P&e._posStateMask,i=N+($GetPrice(e._repMatchLenEncoder,P-2,G)+$GetPureRepPrice(e,A,W,G))+ProbPrices[e._isMatch[(U<<4)+F]>>>2]+$GetPrice_0($GetSubCoder(e._literalEncoder,r+P,$GetIndexByte(e._matchFinder,P-1-1)),1,$GetIndexByte(e._matchFinder,P-1-(e.reps[A]+1)),$GetIndexByte(e._matchFinder,P-1)),U=StateUpdateChar(U),F=r+P+1&e._posStateMask,M=i+ProbPrices[2048-e._isMatch[(U<<4)+F]>>>2]+ProbPrices[2048-e._isRep[U]>>>2],C=P+1+l;m<t+C;)e._optimum[++m].Price=268435455;(n=M+($GetPrice(e._repMatchLenEncoder,l-2,F)+$GetPureRepPrice(e,0,U,F)))<(L=e._optimum[t+C]).Price&&(L.Price=n,L.PosPrev=t+P+1,L.BackPrev=0,L.Prev1IsChar=1,L.Prev2=1,L.PosPrev2=t,L.BackPrev2=A)}}if(v>E){for(v=E,g=0;v>e._matchDistances[g];g+=2);e._matchDistances[g]=v,g+=2}if(v>=H){for(b=B+ProbPrices[e._isRep[W]>>>2];m<t+v;)e._optimum[++m].Price=268435455;for(R=0;H>e._matchDistances[R];)R+=2;for(P=H;;++P)if((n=b+$GetPosLenPrice(e,s=e._matchDistances[R+1],P,G))<(L=e._optimum[t+P]).Price&&(L.Price=n,L.PosPrev=t,L.BackPrev=s+4,L.Prev1IsChar=0),P==e._matchDistances[R]){if(P<k&&(Y=Math.min(k-1-P,e._numFastBytes),(l=$GetMatchLen(e._matchFinder,P,s,Y))>=2)){for(U=W<7?7:10,F=r+P&e._posStateMask,i=n+ProbPrices[e._isMatch[(U<<4)+F]>>>2]+$GetPrice_0($GetSubCoder(e._literalEncoder,r+P,$GetIndexByte(e._matchFinder,P-1-1)),1,$GetIndexByte(e._matchFinder,P-(s+1)-1),$GetIndexByte(e._matchFinder,P-1)),U=StateUpdateChar(U),F=r+P+1&e._posStateMask,M=i+ProbPrices[2048-e._isMatch[(U<<4)+F]>>>2]+ProbPrices[2048-e._isRep[U]>>>2],C=P+1+l;m<t+C;)e._optimum[++m].Price=268435455;(n=M+($GetPrice(e._repMatchLenEncoder,l-2,F)+$GetPureRepPrice(e,0,U,F)))<(L=e._optimum[t+C]).Price&&(L.Price=n,L.PosPrev=t+P+1,L.BackPrev=0,L.Prev1IsChar=1,L.Prev2=1,L.PosPrev2=t,L.BackPrev2=s+4)}if((R+=2)==g)break}}}}}function $GetPosLenPrice(e,r,t,o){var i=GetLenToPosState(t);return(r<128?e._distancesPrices[128*i+r]:e._posSlotPrices[(i<<6)+GetPosSlot2(r)]+e._alignPrices[15&r])+$GetPrice(e._lenEncoder,t-2,o)}function $GetPureRepPrice(e,r,t,o){var i;return r?(i=ProbPrices[2048-e._isRepG0[t]>>>2],1==r?i+=ProbPrices[e._isRepG1[t]>>>2]:(i+=ProbPrices[2048-e._isRepG1[t]>>>2],i+=GetPrice(e._isRepG2[t],r-2))):(i=ProbPrices[e._isRepG0[t]>>>2],i+=ProbPrices[2048-e._isRep0Long[(t<<4)+o]>>>2]),i}function $GetRepLen1Price(e,r,t){return ProbPrices[e._isRepG0[r]>>>2]+ProbPrices[e._isRep0Long[(r<<4)+t]>>>2]}function $Init_4(e){$BaseInit(e),$Init_9(e._rangeEncoder),InitBitModels(e._isMatch),InitBitModels(e._isRep0Long),InitBitModels(e._isRep),InitBitModels(e._isRepG0),InitBitModels(e._isRepG1),InitBitModels(e._isRepG2),InitBitModels(e._posEncoders),$Init_3(e._literalEncoder);for(var r=0;r<4;++r)InitBitModels(e._posSlotEncoder[r].Models);$Init_2(e._lenEncoder,1<<e._posStateBits),$Init_2(e._repMatchLenEncoder,1<<e._posStateBits),InitBitModels(e._posAlignEncoder.Models),e._longestMatchWasFound=0,e._optimumEndIndex=0,e._optimumCurrentIndex=0,e._additionalOffset=0}function $MovePos(e,r){r>0&&($Skip(e._matchFinder,r),e._additionalOffset+=r)}function $ReadMatchDistances(e){var r=0;return e._numDistancePairs=$GetMatches(e._matchFinder,e._matchDistances),e._numDistancePairs>0&&(r=e._matchDistances[e._numDistancePairs-2])==e._numFastBytes&&(r+=$GetMatchLen(e._matchFinder,r-1,e._matchDistances[e._numDistancePairs-1],273-r)),++e._additionalOffset,r}function $ReleaseMFStream(e){e._matchFinder&&e._needReleaseMFStream&&(e._matchFinder._stream=null,e._needReleaseMFStream=0)}function $ReleaseStreams(e){$ReleaseMFStream(e),e._rangeEncoder.Stream=null}function $SetDictionarySize_0(e,r){e._dictionarySize=r;for(var t=0;r>1<<t;++t);e._distTableSize=2*t}function $SetMatchFinder(e,r){var t=e._matchFinderType;e._matchFinderType=r,e._matchFinder&&t!=e._matchFinderType&&(e._dictionarySizePrev=-1,e._matchFinder=null)}function $WriteCoderProperties(e,r){e.properties[0]=9*(5*e._posStateBits+e._numLiteralPosStateBits)+e._numLiteralContextBits<<24>>24;for(var t=0;t<4;++t)e.properties[1+t]=e._dictionarySize>>8*t<<24>>24;$write_0(r,e.properties,0,5)}function $WriteEndMarker(e,r){if(e._writeEndMark){$Encode_3(e._rangeEncoder,e._isMatch,(e._state<<4)+r,1),$Encode_3(e._rangeEncoder,e._isRep,e._state,0),e._state=e._state<7?7:10,$Encode_0(e._lenEncoder,e._rangeEncoder,0,r);var t=GetLenToPosState(2);$Encode_2(e._posSlotEncoder[t],e._rangeEncoder,63),$EncodeDirectBits(e._rangeEncoder,67108863,26),$ReverseEncode(e._posAlignEncoder,e._rangeEncoder,15)}}function GetPosSlot(e){return e<2048?g_FastPos[e]:e<2097152?g_FastPos[e>>10]+20:g_FastPos[e>>20]+40}function GetPosSlot2(e){return e<131072?g_FastPos[e>>6]+12:e<134217728?g_FastPos[e>>16]+32:g_FastPos[e>>26]+52}function $Encode(e,r,t,o){t<8?($Encode_3(r,e._choice,0,0),$Encode_2(e._lowCoder[o],r,t)):(t-=8,$Encode_3(r,e._choice,0,1),t<8?($Encode_3(r,e._choice,1,0),$Encode_2(e._midCoder[o],r,t)):($Encode_3(r,e._choice,1,1),$Encode_2(e._highCoder,r,t-8)))}function $Encoder$LenEncoder(e){e._choice=initDim(2),e._lowCoder=initDim(16),e._midCoder=initDim(16),e._highCoder=$BitTreeEncoder({},8);for(var r=0;r<16;++r)e._lowCoder[r]=$BitTreeEncoder({},3),e._midCoder[r]=$BitTreeEncoder({},3);return e}function $Init_2(e,r){InitBitModels(e._choice);for(var t=0;t<r;++t)InitBitModels(e._lowCoder[t].Models),InitBitModels(e._midCoder[t].Models);InitBitModels(e._highCoder.Models)}function $SetPrices(e,r,t,o,i){var n,s,c,_,a;for(n=ProbPrices[e._choice[0]>>>2],c=(s=ProbPrices[2048-e._choice[0]>>>2])+ProbPrices[e._choice[1]>>>2],_=s+ProbPrices[2048-e._choice[1]>>>2],a=0,a=0;a<8;++a){if(a>=t)return;o[i+a]=n+$GetPrice_1(e._lowCoder[r],a)}for(;a<16;++a){if(a>=t)return;o[i+a]=c+$GetPrice_1(e._midCoder[r],a-8)}for(;a<t;++a)o[i+a]=_+$GetPrice_1(e._highCoder,a-8-8)}function $Encode_0(e,r,t,o){$Encode(e,r,t,o),0==--e._counters[o]&&($SetPrices(e,o,e._tableSize,e._prices,272*o),e._counters[o]=e._tableSize)}function $Encoder$LenPriceTableEncoder(e){return $Encoder$LenEncoder(e),e._prices=[],e._counters=[],e}function $GetPrice(e,r,t){return e._prices[272*t+r]}function $UpdateTables(e,r){for(var t=0;t<r;++t)$SetPrices(e,t,e._tableSize,e._prices,272*t),e._counters[t]=e._tableSize}function $Create_1(e,r,t){var o,i;if(null==e.m_Coders||e.m_NumPrevBits!=t||e.m_NumPosBits!=r)for(e.m_NumPosBits=r,e.m_PosMask=(1<<r)-1,e.m_NumPrevBits=t,i=1<<e.m_NumPrevBits+e.m_NumPosBits,e.m_Coders=initDim(i),o=0;o<i;++o)e.m_Coders[o]=$Encoder$LiteralEncoder$Encoder2({})}function $GetSubCoder(e,r,t){return e.m_Coders[((r&e.m_PosMask)<<e.m_NumPrevBits)+((255&t)>>>8-e.m_NumPrevBits)]}function $Init_3(e){var r,t=1<<e.m_NumPrevBits+e.m_NumPosBits;for(r=0;r<t;++r)InitBitModels(e.m_Coders[r].m_Encoders)}function $Encode_1(e,r,t){var o,i,n=1;for(i=7;i>=0;--i)o=t>>i&1,$Encode_3(r,e.m_Encoders,n,o),n=n<<1|o}function $EncodeMatched(e,r,t,o){var i,n,s,c,_=1,a=1;for(n=7;n>=0;--n)i=o>>n&1,c=a,_&&(c+=1+(s=t>>n&1)<<8,_=s==i),$Encode_3(r,e.m_Encoders,c,i),a=a<<1|i}function $Encoder$LiteralEncoder$Encoder2(e){return e.m_Encoders=initDim(768),e}function $GetPrice_0(e,r,t,o){var i,n,s=1,c=7,_=0;if(r)for(;c>=0;--c)if(n=t>>c&1,i=o>>c&1,_+=GetPrice(e.m_Encoders[(1+n<<8)+s],i),s=s<<1|i,n!=i){--c;break}for(;c>=0;--c)i=o>>c&1,_+=GetPrice(e.m_Encoders[s],i),s=s<<1|i;return _}function $MakeAsChar(e){e.BackPrev=-1,e.Prev1IsChar=0}function $MakeAsShortRep(e){e.BackPrev=0,e.Prev1IsChar=0}function $BitTreeDecoder(e,r){return e.NumBitLevels=r,e.Models=initDim(1<<r),e}function $Decode_0(e,r){var t,o=1;for(t=e.NumBitLevels;0!=t;--t)o=(o<<1)+$DecodeBit(r,e.Models,o);return o-(1<<e.NumBitLevels)}function $ReverseDecode(e,r){var t,o,i=1,n=0;for(o=0;o<e.NumBitLevels;++o)t=$DecodeBit(r,e.Models,i),i<<=1,i+=t,n|=t<<o;return n}function ReverseDecode(e,r,t,o){var i,n,s=1,c=0;for(n=0;n<o;++n)i=$DecodeBit(t,e,r+s),s<<=1,s+=i,c|=i<<n;return c}function $BitTreeEncoder(e,r){return e.NumBitLevels=r,e.Models=initDim(1<<r),e}function $Encode_2(e,r,t){var o,i,n=1;for(i=e.NumBitLevels;0!=i;)o=t>>>--i&1,$Encode_3(r,e.Models,n,o),n=n<<1|o}function $GetPrice_1(e,r){var t,o,i=1,n=0;for(o=e.NumBitLevels;0!=o;)t=r>>>--o&1,n+=GetPrice(e.Models[i],t),i=(i<<1)+t;return n}function $ReverseEncode(e,r,t){var o,i,n=1;for(i=0;i<e.NumBitLevels;++i)o=1&t,$Encode_3(r,e.Models,n,o),n=n<<1|o,t>>=1}function $ReverseGetPrice(e,r){var t,o,i=1,n=0;for(o=e.NumBitLevels;0!=o;--o)t=1&r,r>>>=1,n+=GetPrice(e.Models[i],t),i=i<<1|t;return n}function ReverseEncode(e,r,t,o,i){var n,s,c=1;for(s=0;s<o;++s)$Encode_3(t,e,r+c,n=1&i),c=c<<1|n,i>>=1}function ReverseGetPrice(e,r,t,o){var i,n,s=1,c=0;for(n=t;0!=n;--n)i=1&o,o>>>=1,c+=ProbPrices[(2047&(e[r+s]-i^-i))>>>2],s=s<<1|i;return c}function $DecodeBit(e,r,t){var o,i=r[t];return o=(e.Range>>>11)*i,(-2147483648^e.Code)<(-2147483648^o)?(e.Range=o,r[t]=i+(2048-i>>>5)<<16>>16,-16777216&e.Range||(e.Code=e.Code<<8|$read(e.Stream),e.Range<<=8),0):(e.Range-=o,e.Code-=o,r[t]=i-(i>>>5)<<16>>16,-16777216&e.Range||(e.Code=e.Code<<8|$read(e.Stream),e.Range<<=8),1)}function $DecodeDirectBits(e,r){var t,o,i=0;for(t=r;0!=t;--t)e.Range>>>=1,o=e.Code-e.Range>>>31,e.Code-=e.Range&o-1,i=i<<1|1-o,-16777216&e.Range||(e.Code=e.Code<<8|$read(e.Stream),e.Range<<=8);return i}function $Init_8(e){e.Code=0,e.Range=-1;for(var r=0;r<5;++r)e.Code=e.Code<<8|$read(e.Stream)}function InitBitModels(e){for(var r=e.length-1;r>=0;--r)e[r]=1024}var ProbPrices=function(){var e,r,t,o=[];for(r=8;r>=0;--r)for(e=1<<9-r,t=1<<9-r-1;t<e;++t)o[t]=(r<<6)+(e-t<<6>>>9-r-1);return o}();function $Encode_3(e,r,t,o){var i,n=r[t];i=(e.Range>>>11)*n,o?(e.Low=add(e.Low,and(fromInt(i),[4294967295,0])),e.Range-=i,r[t]=n-(n>>>5)<<16>>16):(e.Range=i,r[t]=n+(2048-n>>>5)<<16>>16),-16777216&e.Range||(e.Range<<=8,$ShiftLow(e))}function $EncodeDirectBits(e,r,t){for(var o=t-1;o>=0;--o)e.Range>>>=1,1==(r>>>o&1)&&(e.Low=add(e.Low,fromInt(e.Range))),-16777216&e.Range||(e.Range<<=8,$ShiftLow(e))}function $GetProcessedSizeAdd(e){return add(add(fromInt(e._cacheSize),e._position),[4,0])}function $Init_9(e){e._position=P0_longLit,e.Low=P0_longLit,e.Range=-1,e._cacheSize=1,e._cache=0}function $ShiftLow(e){var r,t=lowBits_0(shru(e.Low,32));if(0!=t||compare(e.Low,[4278190080,0])<0){e._position=add(e._position,fromInt(e._cacheSize)),r=e._cache;do{$write(e.Stream,r+t),r=255}while(0!=--e._cacheSize);e._cache=lowBits_0(e.Low)>>>24}++e._cacheSize,e.Low=shl(and(e.Low,[16777215,0]),8)}function GetPrice(e,r){return ProbPrices[(2047&(e-r^-r))>>>2]}function decode(e){for(var r,t,o,i=0,n=0,s=e.length,c=[],_=[];i<s;++i,++n){if(128&(r=255&e[i]))if(192==(224&r)){if(i+1>=s)return e;if(128!=(192&(t=255&e[++i])))return e;_[n]=(31&r)<<6|63&t}else{if(224!=(240&r))return e;if(i+2>=s)return e;if(128!=(192&(t=255&e[++i])))return e;if(128!=(192&(o=255&e[++i])))return e;_[n]=(15&r)<<12|(63&t)<<6|63&o}else{if(!r)return e;_[n]=r}16383==n&&(c.push(String.fromCharCode.apply(String,_)),n=-1)}return n>0&&(_.length=n,c.push(String.fromCharCode.apply(String,_))),c.join("")}function encode(e){var r,t,o,i=[],n=0,s=e.length;if("object"==typeof e)return e;for($getChars(e,0,s,i,0),o=0;o<s;++o)(r=i[o])>=1&&r<=127?++n:n+=!r||r>=128&&r<=2047?2:3;for(t=[],n=0,o=0;o<s;++o)(r=i[o])>=1&&r<=127?t[n++]=r<<24>>24:!r||r>=128&&r<=2047?(t[n++]=(192|r>>6&31)<<24>>24,t[n++]=(128|63&r)<<24>>24):(t[n++]=(224|r>>12&15)<<24>>24,t[n++]=(128|r>>6&63)<<24>>24,t[n++]=(128|63&r)<<24>>24);return t}const modes=[{s:16,f:64,m:0},{s:20,f:64,m:0},{s:19,f:64,m:1},{s:20,f:64,m:1},{s:21,f:128,m:1},{s:22,f:128,m:1},{s:23,f:128,m:1},{s:24,f:255,m:1},{s:25,f:255,m:1}];function get_mode_obj(e){return modes[e-1]||modes[6]}export function compress(e,{mode:r=7,enableEndMark:t=!0}={}){var o={};for(o.c=$LZMAByteArrayCompressor({},encode(e),get_mode_obj(r),t);$processChunk(o.c.chunker););return $toByteArray(o.c.output)}export function compressUrlSafe(e,{mode:r=7,enableEndMark:t=!0}={}){const o=compress(e,{mode:r,enableEndMark:t}),i=new Uint8Array(o);return base64.encodeFromArrayUrlSafe(i)}export function decompress(e){var r={};for(r.d=$LZMAByteArrayDecompressor({},e);$processChunk(r.d.chunker););return decode($toByteArray(r.d.output))}export function decompressUrlSafe(e){return decompress(new Int8Array(base64.decodeToArrayUrlSafe(e)))}